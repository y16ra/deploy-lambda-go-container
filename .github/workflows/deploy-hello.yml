name: Build and Deploy Hello

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
env:
  REPOSITORY: go-hello
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'hello/go.mod'
      - run: go version
      - name: Build and push
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        uses: docker/build-push-action@v5
        with:
          context: ./hello
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Update Lambda function image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: aws lambda update-function-code --function-name go-hello --image-uri ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest
      